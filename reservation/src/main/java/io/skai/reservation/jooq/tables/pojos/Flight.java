/*
 * This file is generated by jOOQ.
 */
package io.skai.reservation.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Flight implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime departureDate;
    private Long departureAirportId;
    private LocalDateTime arrivalDate;
    private Long arrivalAirportId;

    public Flight() {}

    public Flight(Flight value) {
        this.id = value.id;
        this.departureDate = value.departureDate;
        this.departureAirportId = value.departureAirportId;
        this.arrivalDate = value.arrivalDate;
        this.arrivalAirportId = value.arrivalAirportId;
    }

    public Flight(
        Long id,
        LocalDateTime departureDate,
        Long departureAirportId,
        LocalDateTime arrivalDate,
        Long arrivalAirportId
    ) {
        this.id = id;
        this.departureDate = departureDate;
        this.departureAirportId = departureAirportId;
        this.arrivalDate = arrivalDate;
        this.arrivalAirportId = arrivalAirportId;
    }

    /**
     * Getter for <code>airlines-db.flight.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>airlines-db.flight.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>airlines-db.flight.departure_date</code>.
     */
    public LocalDateTime getDepartureDate() {
        return this.departureDate;
    }

    /**
     * Setter for <code>airlines-db.flight.departure_date</code>.
     */
    public void setDepartureDate(LocalDateTime departureDate) {
        this.departureDate = departureDate;
    }

    /**
     * Getter for <code>airlines-db.flight.departure_airport_id</code>.
     */
    public Long getDepartureAirportId() {
        return this.departureAirportId;
    }

    /**
     * Setter for <code>airlines-db.flight.departure_airport_id</code>.
     */
    public void setDepartureAirportId(Long departureAirportId) {
        this.departureAirportId = departureAirportId;
    }

    /**
     * Getter for <code>airlines-db.flight.arrival_date</code>.
     */
    public LocalDateTime getArrivalDate() {
        return this.arrivalDate;
    }

    /**
     * Setter for <code>airlines-db.flight.arrival_date</code>.
     */
    public void setArrivalDate(LocalDateTime arrivalDate) {
        this.arrivalDate = arrivalDate;
    }

    /**
     * Getter for <code>airlines-db.flight.arrival_airport_id</code>.
     */
    public Long getArrivalAirportId() {
        return this.arrivalAirportId;
    }

    /**
     * Setter for <code>airlines-db.flight.arrival_airport_id</code>.
     */
    public void setArrivalAirportId(Long arrivalAirportId) {
        this.arrivalAirportId = arrivalAirportId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Flight other = (Flight) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.departureDate == null) {
            if (other.departureDate != null)
                return false;
        }
        else if (!this.departureDate.equals(other.departureDate))
            return false;
        if (this.departureAirportId == null) {
            if (other.departureAirportId != null)
                return false;
        }
        else if (!this.departureAirportId.equals(other.departureAirportId))
            return false;
        if (this.arrivalDate == null) {
            if (other.arrivalDate != null)
                return false;
        }
        else if (!this.arrivalDate.equals(other.arrivalDate))
            return false;
        if (this.arrivalAirportId == null) {
            if (other.arrivalAirportId != null)
                return false;
        }
        else if (!this.arrivalAirportId.equals(other.arrivalAirportId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.departureDate == null) ? 0 : this.departureDate.hashCode());
        result = prime * result + ((this.departureAirportId == null) ? 0 : this.departureAirportId.hashCode());
        result = prime * result + ((this.arrivalDate == null) ? 0 : this.arrivalDate.hashCode());
        result = prime * result + ((this.arrivalAirportId == null) ? 0 : this.arrivalAirportId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Flight (");

        sb.append(id);
        sb.append(", ").append(departureDate);
        sb.append(", ").append(departureAirportId);
        sb.append(", ").append(arrivalDate);
        sb.append(", ").append(arrivalAirportId);

        sb.append(")");
        return sb.toString();
    }
}
